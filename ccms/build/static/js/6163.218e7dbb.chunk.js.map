{"version":3,"file":"static/js/6163.218e7dbb.chunk.js","mappings":"qaAiBe,SAASA,EAAT,GAAwC,IAAZC,EAAW,EAAXA,SACzCC,QAAQC,IAAIF,EAAS,cAErB,IAAQG,GAAoBC,EAAAA,EAAAA,MAApBD,gBACFE,GAASC,EAAAA,EAAAA,MAETC,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CC,MAAOF,EAAAA,KAAaE,MAAM,uCAAuCC,SAAS,uBAGtEC,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYR,GACtBS,cAAe,CAAEN,MAAO,MAIxBO,EAEEL,EAFFK,aACaC,EACXN,EADFO,UAAaD,aAGTE,EAAQ,mCAAG,WAAOC,GAAP,wFAEPC,EAAS,IAAIC,UACZC,OAAO,QAAd,OAAuBH,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMX,OAHhB,SAKPe,EAAAA,EAAAA,KAAA,eAAmBzB,EAAnB,WAAsCsB,GAEzCI,MAAK,SAACC,GAAc,IAAD,EAEmB,EAIjC,GALJ1B,QAAQC,IAAIyB,IACmB,KAAnB,OAARA,QAAQ,IAARA,GAAA,UAAAA,EAAUN,YAAV,eAAgBO,UAClBzB,EAAe,OAACwB,QAAD,IAACA,GAAD,UAACA,EAAUN,YAAX,aAAC,EAAgBQ,SAChCxB,EAAS,YAGTF,EAAe,OAACwB,QAAD,IAACA,GAAD,UAACA,EAAUN,YAAX,aAAC,EAAgBQ,QAAS,CACvCC,QAAS,aAfJ,uDAoBb3B,EAAgB,EAAD,GAAQ,CACrB2B,QAAS,UAEX7B,QAAQ8B,MAAR,MAvBa,yDAAH,sDA2Bd,OACE,SAAC,KAAD,CAAcnB,QAASA,EAASQ,SAAUH,EAAaG,GAAvD,UACE,UAACY,EAAA,EAAD,CAAOC,QAAS,EAAhB,WACE,SAAC,KAAD,CAAcC,KAAK,QAAQC,MAAM,mBAEjC,SAACC,EAAA,EAAD,CAAeC,WAAS,EAACC,KAAK,QAAQC,KAAK,SAAST,QAAQ,YAAYU,QAAStB,EAAjF,iCC1DR,IAAMuB,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,kBAAgB,CAC9CC,QAAS,OACTC,UAAW,OACXC,WAAY,SACZC,eAAgB,SAChBC,QAL8B,EAAGC,MAKlBf,QAAQ,GAAI,OAGd,SAASgB,EAAT,GAAoC,IAAZjD,EAAW,EAAXA,SAErC,OADFC,QAAQC,IAAIF,EAAS,kBAEjB,SAACkD,EAAA,EAAD,CAAMC,MAAM,iBAAiBC,GAAI,CAAEC,OAAQ,GAA3C,UACE,UAACZ,EAAD,YACE,SAACa,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAKJ,GAAI,CAAEK,SAAU,IAAKC,GAAI,QAA9B,WAEM,SAACC,EAAA,EAAD,CAAY7B,QAAQ,KAAK8B,WAAS,EAAlC,oCAGA,SAACD,EAAA,EAAD,CAAYP,GAAI,CAAES,MAAO,iBAAkBC,GAAI,GAA/C,+HAKA,SAAC/D,EAAD,CAAmBC,SAAUA,KAE7B,SAAC+D,EAAA,EAAD,CAAQ1B,WAAS,EAACC,KAAK,QAAQ0B,UAAWC,EAAAA,GAAYC,GAAG,IAAId,GAAI,CAAEe,GAAI,GAAvE","sources":["sections/auth/reset-password/ResetPasswordForm.js","pages/auth/ResetPassword.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\nimport * as Yup from 'yup';\r\n// form\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// hooks\r\nimport axios from '../../../utils/axios';\r\n// components\r\nimport { FormProvider, RHFTextField } from '../../../components/hook-form';\r\n\r\n\r\nexport default function ResetPasswordForm({usertype}) {\r\n  console.log(usertype,'reset form')\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const navigate=useNavigate();\r\n\r\n  const ResetPasswordSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ResetPasswordSchema),\r\n    defaultValues: { email: '' },\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const forget = new FormData();\r\n      forget.append('email', data?.email);\r\n\r\n      await axios.post(`/api/${usertype}/forget`, forget)\r\n\r\n        .then((response) => {\r\n          console.log(response)\r\n          if (response?.data?.status === true) {\r\n            enqueueSnackbar(response?.data?.message);\r\n            navigate('/forget');\r\n          }\r\n          else{\r\n            enqueueSnackbar(response?.data?.message, {\r\n              variant: 'error',\r\n            });\r\n          }\r\n        });\r\n    } catch (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: 'error',\r\n      });\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n          Reset Password\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Container, Typography } from '@mui/material';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport { ResetPasswordForm } from '../../sections/auth/reset-password';\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\nexport default function ResetPassword({usertype}) {\r\nconsole.log(usertype,'resetpassword')\r\n  return (\r\n    <Page title=\"Reset Password\" sx={{ height: 1 }}>\r\n      <RootStyle>\r\n        <LogoOnlyLayout />\r\n\r\n        <Container>\r\n          <Box sx={{ maxWidth: 480, mx: 'auto' }}>\r\n       \r\n                <Typography variant=\"h3\" paragraph>\r\n                  Forgot your password?\r\n                </Typography>\r\n                <Typography sx={{ color: 'text.secondary', mb: 5 }}>\r\n                  Please enter the email address associated with your account and We will email you a link to reset your\r\n                  password.\r\n                </Typography>\r\n\r\n                <ResetPasswordForm usertype={usertype} />\r\n\r\n                <Button fullWidth size=\"large\" component={RouterLink} to='/' sx={{ mt: 1 }}>\r\n                  Back\r\n                </Button>\r\n             \r\n          </Box>\r\n        </Container>\r\n      </RootStyle>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["ResetPasswordForm","usertype","console","log","enqueueSnackbar","useSnackbar","navigate","useNavigate","ResetPasswordSchema","Yup","shape","email","required","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","isSubmitting","formState","onSubmit","data","forget","FormData","append","axios","then","response","status","message","variant","error","Stack","spacing","name","label","LoadingButton","fullWidth","size","type","loading","RootStyle","styled","display","minHeight","alignItems","justifyContent","padding","theme","ResetPassword","Page","title","sx","height","LogoOnlyLayout","Container","Box","maxWidth","mx","Typography","paragraph","color","mb","Button","component","RouterLink","to","mt"],"sourceRoot":""}