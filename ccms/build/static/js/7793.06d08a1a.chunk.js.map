{"version":3,"file":"static/js/7793.06d08a1a.chunk.js","mappings":"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","sources":["sections/auth/verify-code/VerifyCodeForm.js","pages/auth/VerifyCode.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { OutlinedInput, Stack } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCodeForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.string().required('Code is required'),\r\n    code2: Yup.string().required('Code is required'),\r\n    code3: Yup.string().required('Code is required'),\r\n    code4: Yup.string().required('Code is required'),\r\n    code5: Yup.string().required('Code is required'),\r\n    code6: Yup.string().required('Code is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code1: '',\r\n    code2: '',\r\n    code3: '',\r\n    code4: '',\r\n    code5: '',\r\n    code6: '',\r\n  };\r\n\r\n  const {\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('paste', handlePasteClipboard);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      console.log('code:', Object.values(data).join(''));\r\n\r\n      enqueueSnackbar('Verify success!');\r\n\r\n      navigate(PATH_DASHBOARD.root, { replace: true });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handlePasteClipboard = (event) => {\r\n    let data = event?.clipboardData?.getData('Text') || '';\r\n\r\n    data = data.split('');\r\n\r\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\r\n      node.value = data[index];\r\n      const fieldIndex = `code${index + 1}`;\r\n      setValue(fieldIndex, data[index]);\r\n    });\r\n  };\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n    const fieldIndex = name.replace('code', '');\r\n\r\n    const fieldIntIndex = Number(fieldIndex);\r\n\r\n    if (value.length >= maxLength) {\r\n      if (fieldIntIndex < 6) {\r\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\r\n\r\n        if (nextfield !== null) {\r\n          nextfield.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n        {Object.keys(values).map((name, index) => (\r\n          <Controller\r\n            key={name}\r\n            name={`code${index + 1}`}\r\n            control={control}\r\n            render={({ field }) => (\r\n              <OutlinedInput\r\n                {...field}\r\n                id=\"field-code\"\r\n                autoFocus={index === 0}\r\n                placeholder=\"-\"\r\n                onChange={(event) => handleChangeWithNextField(event, field.onChange)}\r\n                inputProps={{\r\n                  maxLength: 1,\r\n                  sx: {\r\n                    p: 0,\r\n                    textAlign: 'center',\r\n                    width: { xs: 36, sm: 56 },\r\n                    height: { xs: 36, sm: 56 },\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        ))}\r\n      </Stack>\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n        disabled={!isValid}\r\n        sx={{ mt: 3 }}\r\n      >\r\n        Verify\r\n      </LoadingButton>\r\n    </form>\r\n  );\r\n}\r\n","import { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Link, Container, Typography } from '@mui/material';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Iconify from '../../components/Iconify';\r\n// sections\r\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  height: '100%',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCode() {\r\n  return (\r\n    <Page title=\"Verify\" sx={{ height: 1 }}>\r\n      <RootStyle>\r\n        <LogoOnlyLayout />\r\n\r\n        <Container>\r\n          <Box sx={{ maxWidth: 480, mx: 'auto' }}>\r\n            <Button\r\n              size=\"small\"\r\n              component={RouterLink}\r\n              to={PATH_AUTH.login}\r\n              startIcon={<Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />}\r\n              sx={{ mb: 3 }}\r\n            >\r\n              Back\r\n            </Button>\r\n\r\n            <Typography variant=\"h3\" paragraph>\r\n              Please check your email!\r\n            </Typography>\r\n            <Typography sx={{ color: 'text.secondary' }}>\r\n              We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify\r\n              your email.\r\n            </Typography>\r\n\r\n            <Box sx={{ mt: 5, mb: 3 }}>\r\n              <VerifyCodeForm />\r\n            </Box>\r\n\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              Donâ€™t have a code? &nbsp;\r\n              <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\r\n                Resend code\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </RootStyle>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","useForm","mode","resolver","yupResolver","defaultValues","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","values","useEffect","document","addEventListener","handlePasteClipboard","onSubmit","data","Promise","resolve","setTimeout","console","log","Object","join","PATH_DASHBOARD","replace","error","event","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","Stack","direction","spacing","justifyContent","keys","map","name","render","field","OutlinedInput","id","autoFocus","placeholder","onChange","handleChange","target","maxLength","fieldIntIndex","Number","length","nextfield","querySelector","focus","handleChangeWithNextField","inputProps","sx","p","textAlign","width","xs","sm","height","LoadingButton","fullWidth","size","type","variant","loading","disabled","mt","RootStyle","styled","display","alignItems","padding","theme","VerifyCode","Page","title","LogoOnlyLayout","Container","Box","maxWidth","mx","Button","component","RouterLink","to","PATH_AUTH","startIcon","Iconify","icon","mb","Typography","paragraph","color","align","Link","underline","onClick"],"sourceRoot":""}