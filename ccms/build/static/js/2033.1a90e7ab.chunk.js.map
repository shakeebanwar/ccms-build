{"version":3,"file":"static/js/2033.1a90e7ab.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/user/UserNewEditForm.js","pages/dashboard/UserCreate.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import isString from 'lodash/isString';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel } from '@mui/material';\r\n// utils\r\nimport { fData } from '../../../utils/formatNumber';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// _mock\r\nimport { countries } from '../../../_mock';\r\n// components\r\nimport Label from '../../../components/Label';\r\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserNewEditForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentUser: PropTypes.object,\r\n};\r\n\r\nexport default function UserNewEditForm({ isEdit, currentUser }) {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    email: Yup.string().required('Email is required').email(),\r\n    phoneNumber: Yup.string().required('Phone number is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('country is required'),\r\n    company: Yup.string().required('Company is required'),\r\n    state: Yup.string().required('State is required'),\r\n    city: Yup.string().required('City is required'),\r\n    role: Yup.string().required('Role Number is required'),\r\n    avatarUrl: Yup.mixed().test('required', 'Avatar is required', (value) => value !== ''),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: currentUser?.name || '',\r\n      email: currentUser?.email || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      address: currentUser?.address || '',\r\n      country: currentUser?.country || '',\r\n      state: currentUser?.state || '',\r\n      city: currentUser?.city || '',\r\n      zipCode: currentUser?.zipCode || '',\r\n      avatarUrl: currentUser?.avatarUrl || '',\r\n      isVerified: currentUser?.isVerified || true,\r\n      status: currentUser?.status,\r\n      company: currentUser?.company || '',\r\n      role: currentUser?.role || '',\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentUser]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentUser) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentUser]);\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n      navigate(PATH_DASHBOARD.user.list);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'avatarUrl',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ py: 10, px: 3 }}>\r\n            {isEdit && (\r\n              <Label\r\n                color={values.status !== 'active' ? 'error' : 'success'}\r\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\r\n              >\r\n                {values.status}\r\n              </Label>\r\n            )}\r\n\r\n            <Box sx={{ mb: 5 }}>\r\n              <RHFUploadAvatar\r\n                name=\"avatarUrl\"\r\n                accept=\"image/*\"\r\n                maxSize={3145728}\r\n                onDrop={handleDrop}\r\n                helperText={\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      mt: 2,\r\n                      mx: 'auto',\r\n                      display: 'block',\r\n                      textAlign: 'center',\r\n                      color: 'text.secondary',\r\n                    }}\r\n                  >\r\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                    <br /> max size of {fData(3145728)}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </Box>\r\n\r\n            {isEdit && (\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={\r\n                  <Controller\r\n                    name=\"status\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Switch\r\n                        {...field}\r\n                        checked={field.value !== 'active'}\r\n                        onChange={(event) => field.onChange(event.target.checked ? 'banned' : 'active')}\r\n                      />\r\n                    )}\r\n                  />\r\n                }\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Banned\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Apply disable account\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n            )}\r\n\r\n            <RHFSwitch\r\n              name=\"isVerified\"\r\n              labelPlacement=\"start\"\r\n              label={\r\n                <>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                    Email Verified\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    Disabling this will automatically send the user a verification email\r\n                  </Typography>\r\n                </>\r\n              }\r\n              sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n            />\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                columnGap: 2,\r\n                rowGap: 3,\r\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n              }}\r\n            >\r\n              <RHFTextField name=\"name\" label=\"Full Name\" />\r\n              <RHFTextField name=\"email\" label=\"Email Address\" />\r\n              <RHFTextField name=\"phoneNumber\" label=\"Phone Number\" />\r\n\r\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\r\n                <option value=\"\" />\r\n                {countries.map((option) => (\r\n                  <option key={option.code} value={option.label}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField name=\"state\" label=\"State/Region\" />\r\n              <RHFTextField name=\"city\" label=\"City\" />\r\n              <RHFTextField name=\"address\" label=\"Address\" />\r\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\r\n              <RHFTextField name=\"company\" label=\"Company\" />\r\n              <RHFTextField name=\"role\" label=\"Role\" />\r\n            </Box>\r\n\r\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                {!isEdit ? 'Create User' : 'Save Changes'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { paramCase, capitalCase } from 'change-case';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { Container } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _userList } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport UserNewEditForm from '../../sections/@dashboard/user/UserNewEditForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserCreate() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const { name = '' } = useParams();\r\n\r\n  const isEdit = pathname.includes('edit');\r\n\r\n  const currentUser = _userList.find((user) => paramCase(user.name) === name);\r\n\r\n  return (\r\n    <Page title=\"User: Create a new user\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.list },\r\n            { name: !isEdit ? 'New user' : capitalCase(name) },\r\n          ]}\r\n        />\r\n\r\n        <UserNewEditForm isEdit={isEdit} currentUser={currentUser} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","UserNewEditForm","isEdit","currentUser","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","shape","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","test","value","defaultValues","useMemo","zipCode","isVerified","status","methods","useForm","resolver","yupResolver","reset","watch","control","setValue","handleSubmit","isSubmitting","formState","values","useEffect","onSubmit","Promise","resolve","setTimeout","PATH_DASHBOARD","console","error","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","Grid","container","spacing","item","xs","md","Card","py","px","Label","textTransform","position","top","right","accept","maxSize","onDrop","helperText","mx","textAlign","fData","FormControlLabel","labelPlacement","render","field","Switch","checked","onChange","event","label","justifyContent","p","columnGap","rowGap","gridTemplateColumns","sm","placeholder","countries","option","code","Stack","LoadingButton","type","loading","UserCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","_userList","user","paramCase","Page","title","Container","capitalCase"],"sourceRoot":""}