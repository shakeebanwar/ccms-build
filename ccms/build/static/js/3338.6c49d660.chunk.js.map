{"version":3,"file":"static/js/3338.6c49d660.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/dashboard/Pdf/PDF.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import isString from 'lodash/isString';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable eqeqeq */\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport MaterialReactTable from \"material-react-table\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { Delete as DeleteIcon } from \"@mui/icons-material\";\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n} from '@mui/material';\r\n// redux\r\nimport { useSnackbar } from 'notistack';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport Page from '../../../components/Page';\r\nimport Iconify from '../../../components/Iconify';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\nimport axiosInstance from '../../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nexport default function PDF() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: \"id\",\r\n        header: \"ID\",\r\n        size: 5,\r\n      },\r\n      {\r\n        accessorKey: \"name\",\r\n        header: \"Plan Name\",\r\n        size: 10,\r\n      },\r\n      {\r\n        accessorKey: \"description\",\r\n        header: \"Description\",\r\n        size: 10,\r\n      },\r\n    ],\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const [subcriptionData, setSubcription] = useState([]);\r\n\r\n  // async function Subscription() {\r\n  //   const data = await axiosInstance.get('/admin/package/view');\r\n  //   console.log(data?.data , 'data?.data');\r\n  //   setSubcription(data?.data?.data);\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   Subscription();\r\n  // }, []);\r\n\r\n  // async function handleDelete(rowdata) {\r\n  //   console.log(rowdata);\r\n  //   try {\r\n  //     await axiosInstance.delete(`package/${rowdata}`)\r\n  //       .then((response) => {\r\n  //         if (response?.data?.status === true) {\r\n  //           enqueueSnackbar('Subscription Deleted Sucessfully');\r\n  //           Subscription();\r\n  //         }\r\n  //       })\r\n  //   } catch (error) {\r\n  //     enqueueSnackbar(error?.message, {\r\n  //       variant: 'error'\r\n  //     });\r\n  //     console.error(error);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Page title=\"PDF\">\r\n      <Container maxWidth='lg'>\r\n        <HeaderBreadcrumbs\r\n          heading=\"PDF\"\r\n          links={[\r\n            { name: '', href: '' },]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n              component={RouterLink}\r\n              // to={PATH_DASHBOARD.pdf.addpdf}\r\n              to=\"#\"\r\n            >\r\n              New PDF\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={subcriptionData}\r\n          enableRowActions\r\n          renderRowActions={({ row }) => (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                gap: \"10px\",\r\n                justifyContent: \"flex-center\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{\r\n                  border: \"1px solid\",\r\n                  borderColor: \"primary.main\",\r\n                }}\r\n                onClick={() => { navigate(PATH_DASHBOARD.pdf.editpdf(row.original.id) , { state: row.original } ) }}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"error\"\r\n                sx={{\r\n                  border: \"1px solid\",\r\n                  borderColor: \"error.main\",\r\n                }}\r\n                // onClick={() => {\r\n                //   handleDelete(row.original.id)\r\n                // }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          positionActionsColumn=\"last\"\r\n        />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","PDF","useSnackbar","enqueueSnackbar","columns","useMemo","accessorKey","header","size","navigate","useNavigate","useState","subcriptionData","title","startIcon","data","enableRowActions","renderRowActions","row","flexWrap","gap","justifyContent","border","borderColor","onClick","PATH_DASHBOARD","original","id","state","positionActionsColumn"],"sourceRoot":""}